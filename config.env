###########################################################################
#                        Environment Configuration                       ##
###########################################################################
# BREW
[ ! -z "$BREW_HOME" ] && export PATH="$BREW_HOME/bin:$PATH"
export PATH=$PATH:$BREW_HOME/sbin
# RBENV
[ ! -z "$RBENV_HOME" ] && export PATH="$RBENV_HOME/bin:$PATH"
eval "$(rbenv init - zsh --no-rehash)"
# RVM
[ ! -z "$RVM_HOME" ]  && export PATH=$RVM_HOME/bin:$PATH
[ -s $RVM_HOME/scripts/rvm ] && source $RVM_HOME/scripts/rvm
# Node modules
NODE_MODULES_PATH="/usr/local/lib/node_modules"
[ ! -z "$NODE_MODULES_PATH" ] && export PATH="$PATH:$NODE_MODULES_PATH"
source $(brew --prefix nvm)/nvm.sh
# User bin
[ ! -z "$HOME/.bin" ]  && export PATH="$HOME/.bin:$PATH"
# Amazon web services
if [ -r "$AWS_CREDENTIALS" ]; then
	# export AWS_ACCESS_KEY_ID=$(tail -n 1 $AWS_CREDENTIALS | cut -d ',' -f 2)
	# export AWS_SECRET_ACCESS_KEY=$(tail -n 1 $AWS_CREDENTIALS | cut -d ',' -f 3)
  echo 'exporting AWS_CREDENTIALS'
	export AWS_ACCESS_KEY_ID=$(grep 'aws_access_key_id' $AWS_CREDENTIALS | cut -d ' ' -f 3)
	export AWS_SECRET_ACCESS_KEY=$(grep 'aws_secret_access_key' $AWS_CREDENTIALS | cut -d ' ' -f 3)
fi
# Golang
[ ! -z "$CODING_DIR" ] && export GOPATH="$CODING_DIR/go" && export PATH="$PATH:$GOPATH/bin"
# MongoDB
[ ! -z "$DATA_DIR" ]   && export MONGO_DBPATH="$DATA_DIR/mongodb"
export MONGODB_URL_BASE=mongodb://0.0.0.0:27017
# Redis
[ ! -z "$DATA_DIR" ]   && export REDIS_DIR="$DATA_DIR/redis"
export REDIS_URL=redis://0.0.0.0:6379
# Postgres
[ ! -z "$DATA_DIR" ]   && export POSTGRES_DIR="$DATA_DIR/postgres"
# RabbitMQ
export RABBITMQ_URL=amqp://0.0.0.0:5672
# Elasticsearch
export ELASTICSEARCH_URL=127.0.0.1:9200

###########################################################################
#                            Shell settings                              ##
###########################################################################
# How many times EOF / ctrl-D is ignored before shell is closed
IGNOREEOF=1

[ "x$BASH_VERSION" != "x" ] && [ -r $ENV_DIR/bash_config.sh ] && source $ENV_DIR/bash_config.sh
[ "x$ZSH_VERSION" != "x" ]  && [ -r $ENV_DIR/zsh_config.sh ]  && source $ENV_DIR/zsh_config.sh
